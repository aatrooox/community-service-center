name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            args: --target universal-apple-darwin
          - platform: ubuntu-22.04
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # === macOS ‰æùËµñ ===
      - name: Install Rust (macOS)
        if: matrix.platform == 'macos-latest'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin,x86_64-apple-darwin

      # === Linux ‰æùËµñ ===
      - name: Install system dependencies (Linux)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install Rust (Linux/Android)
        if: matrix.platform == 'ubuntu-22.04'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: ./src-tauri -> target

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      - name: Install frontend dependencies
        run: pnpm install

      # === Android ÁéØÂ¢ÉÈÖçÁΩÆ ===
      - name: Setup Android NDK (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26d
          add-to-path: false

      - name: Set Android env vars (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          echo "ANDROID_NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "JAVA_HOME=$JAVA_HOME_17_X64" >> $GITHUB_ENV

      - name: Setup Java (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        uses: android-actions/setup-android@v3

      - name: Add Android Rust target (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: rustup target add aarch64-linux-android

      # === ÊûÑÂª∫ macOS DMG ===
      - name: Build macOS app
        if: matrix.platform == 'macos-latest'
        run: pnpm tauri build ${{ matrix.args }}

      - name: Upload macOS DMG
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg

      # === ÊûÑÂª∫ Android APK ===
      - name: Setup Android NDK
        if: matrix.platform == 'ubuntu-22.04'
        uses: nttld/setup-ndk@v1
        id: setup-ndk-2
        with:
          ndk-version: r26d
          add-to-path: false

      - name: Set Android environment variables
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          echo "ANDROID_NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          echo "NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV

      - name: Build Android APK
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          pnpm tauri android init
          pnpm tauri android build --apk --target aarch64
        env:
          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Upload Android APK
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            src-tauri/gen/android/app/build/outputs/apk/**/*.apk

  # === ÂàõÂª∫ Release ===
  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download macOS DMG
        uses: actions/download-artifact@v4
        with:
          name: macos-dmg
          path: ./artifacts/macos/

      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: ./artifacts/android/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: 'Community Service Center ${{ github.ref_name }}'
          body: |
            ## üì¶ ‰∏ãËΩΩ

            - **macOS (Universal)**: `.dmg` Êñá‰ª∂
            - **Android (arm64-v8a)**: `.apk` Êñá‰ª∂

            ## üìù Êõ¥Êñ∞Êó•Âøó
            ËØ∑Êü•Áúã [CHANGELOG.md](https://github.com/aatrooox/community-service-center/blob/main/CHANGELOG.md)
          files: |
            ./artifacts/macos/*.dmg
            ./artifacts/android/**/*.apk
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
