name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            args: --target universal-apple-darwin
          - platform: ubuntu-20.04
            args: --target aarch64-linux-android

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || 'aarch64-linux-android' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: ./src-tauri -> target

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install frontend dependencies
        run: pnpm install

      - name: Setup Android NDK (Android only)
        if: matrix.platform == 'ubuntu-20.04'
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25c
          add-to-path: false

      - name: Setup Android environment (Android only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          echo "NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV

      - name: Setup Java (Android only)
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK (Android only)
        if: matrix.platform == 'ubuntu-20.04'
        uses: android-actions/setup-android@v3

      - name: Install Tauri Android targets (Android only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          rustup target add aarch64-linux-android
          cargo install tauri-cli --version "^2.0" --locked

      - name: Build the app (macOS)
        if: matrix.platform == 'macos-latest'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: Community Service Center v__VERSION__
          releaseBody: See the assets to download this version and install.
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: Build Android APK
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          cargo tauri android init
          cargo tauri android build --apk

      - name: Upload Android APK
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: src-tauri/gen/android/app/build/outputs/apk/universal/release/*.apk

      - name: Create Release (Android)
        if: matrix.platform == 'ubuntu-20.04'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: 'Community Service Center v${{ github.ref_name }}'
          body: See the assets to download this version and install.
          draft: true
          prerelease: false
          files: |
            src-tauri/gen/android/app/build/outputs/apk/universal/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
